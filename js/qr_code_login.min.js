(()=>{"use strict";const e=e=>{const t=(e=e.replace(/-/g,"+").replace(/_/g,"/")).length%4;if(t){if(1===t)throw new Error("InvalidLengthError: Input base64url string is the wrong length to determine padding");e+=new Array(5-t).join("=")}return window.atob(e)},t=e=>btoa(String.fromCharCode(...e));window.PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable().then((e=>{e||console.log("No platform authenticator found. If your OS does not come with one, try using devtools to set one up.")})),console.log("Qr code login loaded"),document.addEventListener("DOMContentLoaded",(async function(){await async function(n,r){r.classList.remove("success"),r.classList.remove("error");try{let o=new FormData;o.append("username",n);let a=await FormSubmit.fetchRestApi("login/auth_start",o);if(!a)throw new Error("Fetching Server Challenge failed");let i=(t=>(t.challenge=Uint8Array.from(e(t.challenge),(e=>e.charCodeAt(0))),void 0!==t.user&&(t.user={...t.user,id:Uint8Array.from(window.atob(t.user.id),(e=>e.charCodeAt(0)))}),void 0!==t.excludeCredentials&&(t.excludeCredentials=t.excludeCredentials.map((t=>({...t,id:Uint8Array.from(e(t.id),(e=>e.charCodeAt(0)))})))),void 0!==t.allowCredentials&&(t.allowCredentials=t.allowCredentials.map((t=>({...t,id:Uint8Array.from(e(t.id),(e=>e.charCodeAt(0)))})))),t))(a);null!=r&&(r.textContent="Waiting for biometric");let s=await navigator.credentials.get({publicKey:i});null!=r&&(r.textContent="Verifying...");const l=(e=>{const n={id:e.id,type:e.type,rawId:t(new Uint8Array(e.rawId)),response:{clientDataJSON:t(new Uint8Array(e.response.clientDataJSON))}};return void 0!==e.response.attestationObject&&(n.response.attestationObject=t(new Uint8Array(e.response.attestationObject))),void 0!==e.response.authenticatorData&&(n.response.authenticatorData=t(new Uint8Array(e.response.authenticatorData))),void 0!==e.response.signature&&(n.response.signature=t(new Uint8Array(e.response.signature))),void 0!==e.response.userHandle&&(n.response.userHandle=t(new Uint8Array(e.response.userHandle))),n})(s);if(o=new FormData,o.append("publicKeyCredential",JSON.stringify(l)),a=await FormSubmit.fetchRestApi("login/auth_finish",o),!a)throw new Error("Verification failed");return null!=r&&(r.textContent="Verification successfull",r.classList.add("success")),!0}catch(e){return null!=r&&(r.textContent=e,r.classList.add("error")),!1}}(sim.userId,document.getElementById("message"))&&(document.querySelector("main").innerHTML='You can close this window now.<br><br> You will be redirected to the home page automatically in <span id="countdown">6</span> seconds.',setInterval((function(){let e=document.getElementById("countdown"),t=parseInt(e.textContent);t<1?location.href=sim.baseUrl+"?message=Login%20succesfully%20aproved":(t--,e.textContent=t)}),1e3)),document.querySelectorAll(".loadergif").forEach((e=>e.classList.add("hidden")))}))})();
//# sourceMappingURL=qr_code_login.min.js.map