{"version":3,"file":"password_strength.min.js","mappings":"mBA2IO,SAASA,EAAkBC,GACjC,IAAIC,EAASD,EAAGC,OAEQ,OAArBD,EAAGC,OAAOC,UACZD,EAASD,EAAGC,OAAOE,YAGQ,KAAzBF,EAAOG,QAAQC,QACjBJ,EAAOK,MAAe,gBACtBL,EAAOG,QAAQC,OAAc,IAC7BJ,EAAOM,UAAkBN,EAAOM,UAAUC,QAAQ,YAAa,WAC/DP,EAAOQ,QAAQ,aAAaC,cAAc,0BAA0BC,KAAO,SAE3EV,EAAOK,MAAe,gBACtBL,EAAOG,QAAQC,OAAc,IAC7BJ,EAAOM,UAAkBN,EAAOM,UAAUC,QAAQ,UAAW,aAC7DP,EAAOQ,QAAQ,aAAaC,cAAc,sBAAsBC,KAAO,WAEzE,CCzJA,SAASC,IACR,IAAIC,EAAUC,SAASJ,cAAc,kBACjCK,EAAUD,SAASJ,cAAc,kBACjCM,EAAaF,SAASJ,cAAc,0BACpCO,EAAaH,SAASJ,cAAc,0BAEpCQ,EACI,qBAQW,IAAfL,EAAMM,OACTH,EAAWI,YAAcF,EACzBF,EAAWK,UAAUC,IAAI,WAEzBC,EAAgBP,GAGE,IAAfD,EAAMI,OACTF,EAAWG,YAAcF,EACzBD,EAAWI,UAAUC,IAAI,YAEzBC,EAAgBN,GAGG,IAAfJ,EAAMM,OACTH,EAAWK,UAAUC,IAAI,UAG5B,CAEA,SAASC,EAAgBC,GACxBA,EAAUH,UAAUI,OAAO,QAAS,MAAO,OAAQ,UAEnD,IAAIZ,EAAUC,SAASJ,cAAc,kBACjCK,EAAUD,SAASJ,cAAc,kBAErC,GAAGG,EAAMM,OAASJ,EAAMI,MACvBK,EAAUH,UAAUC,IAAI,OACxBE,EAAUJ,YAAcF,QAAQQ,cAIhC,OAFeC,GAAGC,iBAAiBC,MAAMhB,EAAMM,MAAOQ,GAAGC,iBAAiBE,0BAA2Bf,EAAMI,QAG1G,KAAK,EACJK,EAAUH,UAAUC,IAAI,OACxBE,EAAUJ,YAAcF,QAAQa,IAChC,MACD,KAAK,EACJP,EAAUH,UAAUC,IAAI,QACxBE,EAAUJ,YAAcF,QAAQc,KAChC,MACD,KAAK,EACJR,EAAUH,UAAUC,IAAI,UACxBE,EAAUJ,YAAcF,QAAQe,OAChC,MACD,KAAK,EACJT,EAAUH,UAAUC,IAAI,SACxBE,EAAUJ,YAAcF,QAAQQ,SAChC,MACD,QACCF,EAAUH,UAAUC,IAAI,SACxBE,EAAUJ,YAAcF,QAAe,MAI1CM,EAAUH,UAAUI,OAAO,SAC5B,CAEAS,eAAeC,EAAqBC,GACnC,IAAIC,EAAOD,EAAMnC,OAAOQ,QAAQ,QAE5B6B,EAAW,IAAIC,SAASF,GAExBG,QAAiBC,WAAWC,aAAa,wBAAyBJ,GAEnEE,IACFG,KAAKC,eAAeJ,EAASK,SAGzBC,SAASC,KAAKC,SAAS,eAC1BF,SAASC,KAAOP,EAASS,WAK3BZ,EAAK3B,cAAc,mCAAmCW,UAAUC,IAAI,SACrE,CA7FA4B,QAAQC,IAAI,+BA+FZrC,SAASsC,iBAAiB,oBAAoB,WAE7CtC,SAASuC,iBAAiB,eAAeC,SAAQC,GAAIA,EAAGH,iBAAiB,QAASxC,KAElFE,SAASuC,iBAAiB,4BAA4BC,SAAQC,GAAIA,EAAGH,iBAAiB,QAASjB,KAE/FrB,SAASuC,iBAAiB,oBAAoBC,SAAQC,GAAIA,EAAGH,iBAAiB,QAASrD,IACxF,G","sources":["webpack://login/./partials/shared.js","webpack://login/./password_strength.js"],"sourcesContent":["export function closeMobileMenu(){\r\n\t//close mobile menu\r\n\tdocument.querySelectorAll('#site-navigation, #mobile-menu-control-wrapper').forEach(el=>el.classList.remove('toggled'));\r\n\tdocument.querySelector('body').classList.remove('mobile-menu-open');\r\n\tdocument.querySelectorAll(\"#mobile-menu-control-wrapper > button\").forEach(el=>el.ariaExpanded = 0);\r\n}\r\n\r\n// Decodes a Base64Url string\r\nconst base64UrlDecode = (input) => {\r\ninput = input\r\n\t.replace(/-/g, '+')\r\n\t.replace(/_/g, '/');\r\n\r\nconst pad = input.length % 4;\r\nif (pad) {\r\n\tif (pad === 1) {\r\n\tthrow new Error('InvalidLengthError: Input base64url string is the wrong length to determine padding');\r\n\t}\r\n\tinput += new Array(5-pad).join('=');\r\n}\r\n\r\nreturn window.atob(input);\r\n};\r\n\r\n// Converts an array of bytes into a Base64Url string\r\nconst arrayToBase64String = (a) => btoa(String.fromCharCode(...a));\r\n\r\n// Prepares the public key options object returned by the Webauthn Framework\r\nexport const preparePublicKeyOptions = publicKey => {\r\n\t//Convert challenge from Base64Url string to Uint8Array\r\n\tpublicKey.challenge = Uint8Array.from(\r\n\t\tbase64UrlDecode(publicKey.challenge),\r\n\t\tc => c.charCodeAt(0)\r\n\t);\r\n\r\n\t//Convert the user ID from Base64 string to Uint8Array\r\n\tif (publicKey.user !== undefined) {\r\n\t\tpublicKey.user = {\r\n\t\t...publicKey.user,\r\n\t\tid: Uint8Array.from(\r\n\t\t\twindow.atob(publicKey.user.id),\r\n\t\t\tc => c.charCodeAt(0)\r\n\t\t),\r\n\t\t};\r\n\t}\r\n\r\n\t//If excludeCredentials is defined, we convert all IDs to Uint8Array\r\n\tif (publicKey.excludeCredentials !== undefined) {\r\n\t\tpublicKey.excludeCredentials = publicKey.excludeCredentials.map(\r\n\t\t\tdata => {\r\n\t\t\treturn {\r\n\t\t\t\t...data,\r\n\t\t\t\tid: Uint8Array.from(\r\n\t\t\t\t\tbase64UrlDecode(data.id),\r\n\t\t\t\t\tc => c.charCodeAt(0)\r\n\t\t\t\t),\r\n\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tif (publicKey.allowCredentials !== undefined) {\r\n\t\tpublicKey.allowCredentials = publicKey.allowCredentials.map(\r\n\t\t\tdata => {\r\n\t\t\treturn {\r\n\t\t\t\t...data,\r\n\t\t\t\tid: Uint8Array.from(\r\n\t\t\t\t\tbase64UrlDecode(data.id),\r\n\t\t\t\t\tc => c.charCodeAt(0)\r\n\t\t\t\t),\r\n\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\treturn publicKey;\r\n};\r\n\r\n// Prepares the public key credentials object returned by the authenticator\r\nexport const preparePublicKeyCredentials = data => {\r\n\tconst publicKeyCredential = {\r\n\t\tid: data.id,\r\n\t\ttype: data.type,\r\n\t\trawId: arrayToBase64String(new Uint8Array(data.rawId)),\r\n\t\tresponse: {\r\n\t\tclientDataJSON: arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.clientDataJSON)\r\n\t\t),\r\n\t\t},\r\n\t};\r\n\r\n\tif (data.response.attestationObject !== undefined) {\r\n\t\tpublicKeyCredential.response.attestationObject = arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.attestationObject)\r\n\t\t);\r\n\t}\r\n\r\n\tif (data.response.authenticatorData !== undefined) {\r\n\t\tpublicKeyCredential.response.authenticatorData = arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.authenticatorData)\r\n\t\t);\r\n\t}\r\n\r\n\tif (data.response.signature !== undefined) {\r\n\t\tpublicKeyCredential.response.signature = arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.signature)\r\n\t\t);\r\n\t}\r\n\r\n\tif (data.response.userHandle !== undefined) {\r\n\t\tpublicKeyCredential.response.userHandle = arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.userHandle)\r\n\t\t);\r\n\t}\r\n\r\n\treturn publicKeyCredential;\r\n};\r\n\r\nexport function showMessage(message, type=''){\r\n\tlet el = document.querySelector(\"#message\");\r\n\tel.innerHTML= DOMPurify.sanitize(message);\r\n\r\n\tel.classList.remove('success');\r\n\tel.classList.remove('warning');\r\n\tel.classList.remove('error');\r\n\r\n\tif(type == 'success'){\r\n\t\tel.classList.add('success');\r\n\t}\r\n\r\n\tif(type == 'warning'){\r\n\t\tel.classList.add('warning');\r\n\t}\r\n\r\n\tif(type == 'error'){\r\n\t\tel.classList.add('error');\r\n\t}\r\n}\r\n\r\nexport function togglePassworView(ev){\r\n\tvar target\t= ev.target;\r\n\r\n\tif(ev.target.tagName == 'IMG'){\r\n\t\ttarget\t= ev.target.parentNode;\r\n\t}\r\n\r\n\tif(target.dataset.toggle == '0'){\r\n\t\ttarget.title\t\t\t\t\t\t\t\t= 'Hide password';\r\n\t\ttarget.dataset.toggle\t\t\t\t\t\t= '1';\r\n\t\ttarget.innerHTML\t\t\t\t\t\t\t= target.innerHTML.replace('invisible', 'visible');\r\n\t\ttarget.closest('.password').querySelector('input[type=\"password\"]').type\t= 'text';\r\n\t}else{\r\n\t\ttarget.title\t\t\t\t\t\t\t\t= 'Show password';\r\n\t\ttarget.dataset.toggle\t\t\t\t\t\t= '0';\r\n\t\ttarget.innerHTML\t\t\t\t\t\t\t= target.innerHTML.replace('visible', 'invisible');\r\n\t\ttarget.closest('.password').querySelector('input[type=\"text\"]').type\t= 'password';\r\n\t}\r\n}","import { togglePassworView } from './partials/shared.js';\r\n\r\nconsole.log('Password strength.js loaded');\r\n\r\nfunction checkPassStrength() {\r\n\tvar pass1 \t\t= document.querySelector('[name=\"pass1\"]');\r\n\tvar pass2 \t\t= document.querySelector('[name=\"pass2\"]');\r\n\tvar indicator1\t= document.querySelector('#pass-strength-result1');\r\n\tvar indicator2\t= document.querySelector('#pass-strength-result2');\r\n\r\n\tvar pwsL10n = {\r\n\t\tempty: \"Strength indicator\",\r\n\t\tshort: \"Improve this password, maybe add special characters\",\r\n\t\tbad: \"Keep going!\",\r\n\t\tgood: \"Allmost there, make it a little bit stronger\",\r\n\t\tstrong: \"Well done!\",\r\n\t\tmismatch: \"Mismatch\"\r\n\t};\r\n\r\n\tif (pass1.value == '') {\r\n\t\tindicator1.textContent = pwsL10n.empty;\r\n\t\tindicator1.classList.add('hidden');\r\n\t}else{\r\n\t\tupdateIndicator(indicator1);\r\n\t}\r\n\t\r\n\tif (pass2.value == '') {\r\n\t\tindicator2.textContent = pwsL10n.empty;\r\n\t\tindicator2.classList.add('hidden');\r\n\t}else{\r\n\t\tupdateIndicator(indicator2);\r\n\t\t\r\n\t\t//hide password strength indicator1\r\n\t\tif (pass1.value != '') {\r\n\t\t\tindicator1.classList.add('hidden');\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction updateIndicator(indicator){\r\n\tindicator.classList.remove('short', 'bad', 'good', 'strong');\r\n\r\n\tvar pass1 \t\t= document.querySelector('[name=\"pass1\"]');\r\n\tvar pass2 \t\t= document.querySelector('[name=\"pass2\"]');\r\n\r\n\tif(pass1.value != pass2.value){\r\n\t\tindicator.classList.add('bad');\r\n\t\tindicator.textContent = pwsL10n.mismatch;\r\n\t}else{\r\n\t\tvar strength\t= wp.passwordStrength.meter(pass1.value, wp.passwordStrength.userInputDisallowedList(), pass2.value);\r\n\r\n\t\tswitch (strength) {\r\n\t\t\tcase 2:\r\n\t\t\t\tindicator.classList.add('bad');\r\n\t\t\t\tindicator.textContent = pwsL10n.bad;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tindicator.classList.add('good');\r\n\t\t\t\tindicator.textContent = pwsL10n.good;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tindicator.classList.add('strong');\r\n\t\t\t\tindicator.textContent = pwsL10n.strong;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\tindicator.classList.add('short');\r\n\t\t\t\tindicator.textContent = pwsL10n.mismatch;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tindicator.classList.add('short');\r\n\t\t\t\tindicator.textContent = pwsL10n['short'];\r\n\t\t}\r\n\t}\r\n\t\r\n\tindicator.classList.remove('hidden');\r\n}\r\n\r\nasync function submitPasswordChange(event){\r\n\tvar form\t= event.target.closest('form');\r\n\r\n\tvar formData\t= new FormData(form);\r\n\r\n\tvar response\t= await FormSubmit.fetchRestApi('login/update_password', formData);\r\n\r\n\tif(response){\r\n\t\tMain.displayMessage(response.message);\r\n\r\n\t\t// redirect to login again if resetting own password\r\n\t\tif(!location.href.includes('?user-id=')){\r\n\t\t\tlocation.href\t= response.redirect;\r\n\t\t}\r\n\t}\r\n\r\n\t// hide loader\r\n\tform.querySelector('.submit-wrapper .loader-wrapper').classList.add('hidden');\r\n}\r\n\t\t\t\t\t\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n\t\r\n\tdocument.querySelectorAll('.changepass').forEach(el=>el.addEventListener(\"keyup\", checkPassStrength));\r\n\r\n\tdocument.querySelectorAll('[name=\"update-password\"]').forEach(el=>el.addEventListener(\"click\", submitPasswordChange));\r\n\r\n\tdocument.querySelectorAll('.toggle-pwd-view').forEach(el=>el.addEventListener(\"click\", togglePassworView));\r\n});"],"names":["togglePassworView","ev","target","tagName","parentNode","dataset","toggle","title","innerHTML","replace","closest","querySelector","type","checkPassStrength","pass1","document","pass2","indicator1","indicator2","pwsL10n","value","textContent","classList","add","updateIndicator","indicator","remove","mismatch","wp","passwordStrength","meter","userInputDisallowedList","bad","good","strong","async","submitPasswordChange","event","form","formData","FormData","response","FormSubmit","fetchRestApi","Main","displayMessage","message","location","href","includes","redirect","console","log","addEventListener","querySelectorAll","forEach","el"],"sourceRoot":""}