{"version":3,"file":"password_strength.min.js","mappings":"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","sources":["webpack://login/./partials/shared.js","webpack://login/./partials/qr_login.js","webpack://login/./partials/webauth.js","webpack://login/./login.js","webpack://login/./password_strength.js"],"sourcesContent":["export function closeMobileMenu(){\r\n\t//close mobile menu\r\n\tdocument.querySelectorAll('#site-navigation, #mobile-menu-control-wrapper').forEach(el=>el.classList.remove('toggled'));\r\n\tdocument.querySelector('body').classList.remove('mobile-menu-open');\r\n\tdocument.querySelectorAll(\"#mobile-menu-control-wrapper > button\").forEach(el=>el.ariaExpanded = 'false');\r\n}\r\n\r\n// Decodes a Base64Url string\r\nconst base64UrlDecode = (input) => {\r\ninput = input\r\n\t.replace(/-/g, '+')\r\n\t.replace(/_/g, '/');\r\n\r\nconst pad = input.length % 4;\r\nif (pad) {\r\n\tif (pad === 1) {\r\n\tthrow new Error('InvalidLengthError: Input base64url string is the wrong length to determine padding');\r\n\t}\r\n\tinput += new Array(5-pad).join('=');\r\n}\r\n\r\nreturn window.atob(input);\r\n};\r\n\r\n// Converts an array of bytes into a Base64Url string\r\nconst arrayToBase64String = (a) => btoa(String.fromCharCode(...a));\r\n\r\n// Prepares the public key options object returned by the Webauthn Framework\r\nexport const preparePublicKeyOptions = publicKey => {\r\n\t//Convert challenge from Base64Url string to Uint8Array\r\n\tpublicKey.challenge = Uint8Array.from(\r\n\t\tbase64UrlDecode(publicKey.challenge),\r\n\t\tc => c.charCodeAt(0)\r\n\t);\r\n\r\n\t//Convert the user ID from Base64 string to Uint8Array\r\n\tif (publicKey.user !== undefined) {\r\n\t\tpublicKey.user = {\r\n\t\t...publicKey.user,\r\n\t\tid: Uint8Array.from(\r\n\t\t\twindow.atob(publicKey.user.id),\r\n\t\t\tc => c.charCodeAt(0)\r\n\t\t),\r\n\t\t};\r\n\t}\r\n\r\n\t//If excludeCredentials is defined, we convert all IDs to Uint8Array\r\n\tif (publicKey.excludeCredentials !== undefined) {\r\n\t\tpublicKey.excludeCredentials = publicKey.excludeCredentials.map(\r\n\t\t\tdata => {\r\n\t\t\treturn {\r\n\t\t\t\t...data,\r\n\t\t\t\tid: Uint8Array.from(\r\n\t\t\t\t\tbase64UrlDecode(data.id),\r\n\t\t\t\t\tc => c.charCodeAt(0)\r\n\t\t\t\t),\r\n\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tif (publicKey.allowCredentials !== undefined) {\r\n\t\tpublicKey.allowCredentials = publicKey.allowCredentials.map(\r\n\t\t\tdata => {\r\n\t\t\treturn {\r\n\t\t\t\t...data,\r\n\t\t\t\tid: Uint8Array.from(\r\n\t\t\t\t\tbase64UrlDecode(data.id),\r\n\t\t\t\t\tc => c.charCodeAt(0)\r\n\t\t\t\t),\r\n\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\treturn publicKey;\r\n};\r\n\r\n// Prepares the public key credentials object returned by the authenticator\r\nexport const preparePublicKeyCredentials = data => {\r\n\tconst publicKeyCredential = {\r\n\t\tid: data.id,\r\n\t\ttype: data.type,\r\n\t\trawId: arrayToBase64String(new Uint8Array(data.rawId)),\r\n\t\tresponse: {\r\n\t\tclientDataJSON: arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.clientDataJSON)\r\n\t\t),\r\n\t\t},\r\n\t};\r\n\r\n\tif (data.response.attestationObject !== undefined) {\r\n\t\tpublicKeyCredential.response.attestationObject = arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.attestationObject)\r\n\t\t);\r\n\t}\r\n\r\n\tif (data.response.authenticatorData !== undefined) {\r\n\t\tpublicKeyCredential.response.authenticatorData = arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.authenticatorData)\r\n\t\t);\r\n\t}\r\n\r\n\tif (data.response.signature !== undefined) {\r\n\t\tpublicKeyCredential.response.signature = arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.signature)\r\n\t\t);\r\n\t}\r\n\r\n\tif (data.response.userHandle !== undefined) {\r\n\t\tpublicKeyCredential.response.userHandle = arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.userHandle)\r\n\t\t);\r\n\t}\r\n\r\n\treturn publicKeyCredential;\r\n};\r\n\r\nexport function showMessage(message, type=''){\r\n\tlet el = document.querySelector(\"#message\");\r\n\tel.innerHTML= DOMPurify.sanitize(message);\r\n\r\n\tel.classList.remove('success');\r\n\tel.classList.remove('warning');\r\n\tel.classList.remove('error');\r\n\r\n\tif(type == 'success'){\r\n\t\tel.classList.add('success');\r\n\t}\r\n\r\n\tif(type == 'warning'){\r\n\t\tel.classList.add('warning');\r\n\t}\r\n\r\n\tif(type == 'error'){\r\n\t\tel.classList.add('error');\r\n\t}\r\n}","import {\r\n\tshowMessage\r\n} from './shared.js';\r\n\r\nlet intervalId;\r\nlet checkCount\t\t\t= 5;\r\n\r\n// Show qr code and start polling for login info\r\nexport function showLoginQrCode(){\r\n\tdocument.getElementById('usercred-wrapper').classList.add('hidden');\r\n\r\n\tshowMessage('Fetching QR code...');\r\n\r\n\tMain.showLoader(document.getElementById(`qrcode-wrapper`).firstChild);\r\n\r\n\t// get the QR code\r\n\trefreshQrCode();\r\n\t\r\n\t // Check for login permission every 5 seconds\r\n\tintervalId\t= setInterval(refreshQrCode, 5000);\r\n}\r\n\r\nfunction login(response){\r\n\tclearInterval(intervalId);\r\n\r\n\tshowMessage('Succesfully logged in, redirecting...', 'success');\r\n\r\n\tMain.showLoader(document.getElementById(`qrcode-wrapper`));\r\n\r\n\tif(!response.startsWith('http')){\r\n\t\tlocation.reload();\r\n\t}else{\r\n\t\tlocation.href = response;\r\n\t}\r\n}\r\n\r\nasync function refreshQrCode(){\r\n\tcheckCount++;\r\n\r\n    let formData    = new FormData();\r\n\tlet wrapper\t\t= document.getElementById(`qrcode-wrapper`);\r\n\tlet qrCodeImage = document.getElementById('login-qr-code');\r\n\r\n\t// refresh the qr code after 30 seconds\r\n\tif(checkCount == 6){\r\n\t\tconsole.log('Refreshing QR code');\r\n\r\n        checkCount      = 0;\r\n\r\n\t\t// also check if previous qr code has been scanned\r\n\t\tif(qrCodeImage != null){\r\n\t\t\tformData.append('token', qrCodeImage.dataset.token);\r\n\t\t\tformData.append('key', qrCodeImage.dataset.key);\r\n\t\t}\r\n\t\t\r\n\t\t// Use AJAX to get the qr code\r\n\t\tlet response    = await FormSubmit.fetchRestApi('login/get_login_qr_code', formData);\r\n\r\n\t\tif(response){\r\n\t\t\twrapper.innerHTML=response;\r\n\r\n\t\t\tshowMessage('Scan the QR code to login');\r\n\r\n\t\t\tconsole.log(`New token: ${document.getElementById('login-qr-code').dataset.token}`);\r\n\t\t\tconsole.log(`New key: ${document.getElementById('login-qr-code').dataset.key}`);\r\n\t\t}else{\r\n\t\t\twrapperinnerHTML='';\r\n\r\n\t\t\tshowMessage('QR Code Refresh Failed', 'error');\r\n\t\t}\r\n\t}else{\r\n\t\tconsole.log('Checking for login permission');\r\n\t\t\r\n        if(qrCodeImage == null){\r\n            return;\r\n        }\r\n\r\n\t\t// Use AJAX to check if the code has been scanned\r\n        formData.append('token', qrCodeImage.dataset.token);\r\n        formData.append('key', qrCodeImage.dataset.key);\r\n        formData.append('old-token', qrCodeImage.dataset.oldtoken);\r\n\t\tlet response\t= await FormSubmit.fetchRestApi('login/qr_code_scanned', formData);\r\n\r\n\t\tif(response){\r\n\t\t\tlogin(response);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function hideQrCode(){\r\n\tclearInterval(intervalId);\r\n\r\n\tshowMessage('');\r\n\r\n\tdocument.getElementById('usercred-wrapper').classList.remove('hidden');\r\n\r\n\tdocument.getElementById(`qrcode-wrapper`).innerHTML = '';\r\n}","import {\r\n    preparePublicKeyCredentials,\r\n    preparePublicKeyOptions,\r\n\tshowMessage\r\n} from './shared.js';\r\n\r\nlet credParsing\t\t\t        = false;\r\nlet abortController;\r\n\r\nwindow.PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable().then(\r\n\tresult => {\r\n\t  if (!result) {\r\n\t\tconsole.log(\"No platform authenticator found. If your OS does not come with one, try using devtools to set one up.\");\r\n\t  }\r\n\t}\r\n);\r\n\r\n/**\r\n * \r\n * @param {string} username The user name to authenticate\r\n * @param {*} messageEl the html onject to display messages in\r\n */\r\nexport async function webAuthVerification(username, messageEl=null){\r\n\tif(messageEl != null){\r\n\t\tmessageEl.classList.remove('success');\r\n\t\tmessageEl.classList.remove('error');\r\n\t}\r\n\r\n\ttry{\r\n\t\t// Get the challenge\r\n\t\tlet formData\t\t\t= new FormData();\r\n\t\tformData.append('username', username);\r\n\r\n\t\tlet response\t\t\t= await FormSubmit.fetchRestApi('login/auth_start', formData);\r\n\t\tif(!response){\r\n\t\t\tthrow new Error('Fetching Server Challenge failed');\r\n\t\t}\r\n\r\n\t\tlet publicKey\t\t\t= preparePublicKeyOptions(response);\r\n\r\n\t\t// Update message\r\n\t\tif(messageEl != null){\r\n\t\t\tmessageEl.textContent\t= 'Waiting for biometric';\r\n\t\t}\r\n\r\n\t\t// Verify on device\r\n\t\tlet credentials\t\t\t= await navigator.credentials.get({\tpublicKey });\r\n\r\n\t\t// Update message\r\n\t\tif(messageEl != null){\r\n\t\t\tmessageEl.textContent\t= 'Verifying...';\r\n\t\t}\r\n\r\n\t\t// Verify on the server\r\n\t\tconst publicKeyCredential \t= preparePublicKeyCredentials(credentials);\r\n\t\tlet form \t\t\t\t\t= document.getElementById('loginform') ? document.getElementById('loginform') : undefined;\r\n\t\tformData\t\t\t\t\t= new FormData(form);\r\n\t\tformData.append('publicKeyCredential', JSON.stringify(publicKeyCredential));\r\n\t\tresponse\t\t\t\t\t= await FormSubmit.fetchRestApi('login/auth_finish', formData);\r\n\t\tif(!response){\r\n\t\t\tthrow new Error('Verification failed');\r\n\t\t}\r\n\r\n\t\tif(messageEl != null){\r\n\t\t\tmessageEl.textContent\t= 'Verification successfull';\r\n\t\t\tmessageEl.classList.add('success');\r\n\t\t}else{\r\n\t\t\tMain.displayMessage('Verification successfull');\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}catch(error){\r\n\t\tconsole.error(error);\r\n\r\n\t\tif(messageEl != null){\r\n\t\t\tmessageEl.textContent\t= error;\r\n\t\t\tmessageEl.classList.add('error');\r\n\t\t}else{\r\n\t\t\tMain.displayMessage(error, 'error');\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport async function processCredential(credential){\r\n\tif(credParsing){\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (credential) {\r\n\t\tcredParsing\t= true;\r\n\r\n\t\tsim.login.loadingScreen('Verifying credentials...');\r\n\r\n\t\t// Verify on the server\r\n\t\tconst publicKeyCredential \t= preparePublicKeyCredentials(credential);\r\n\t\tlet formData\t\t\t\t= new FormData(document.getElementById('loginform'));\r\n\t\tformData.append('publicKeyCredential', JSON.stringify(publicKeyCredential));\r\n\t\tlet response\t\t\t\t= await FormSubmit.fetchRestApi('login/auth_finish', formData, false);\r\n\r\n\t\tif(response){\r\n\t\t\tshowMessage('Passkey login succesfull', 'success');\r\n\t\t}else{\r\n\t\t\tsim.login.reset();\r\n\r\n\t\t\tshowMessage('Passkey login failed, try using your username and password', 'error');\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t//authentication success\r\n\t\treturn await sim.login.requestLogin();\r\n\r\n\t} else {\r\n\t\tconsole.log(\"Credential returned null\");\r\n\r\n\t\tsim.login.resetForm();\r\n\r\n\t\tshowMessage('Passkey login failed', 'error');\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport let startConditionalRequest = async (mediation) => {\r\n\tif (window.PublicKeyCredential && PublicKeyCredential.isConditionalMediationAvailable) {\r\n\t\tconsole.log(\"Conditional UI is understood by the browser\");\r\n\t\tif (!await window.PublicKeyCredential.isConditionalMediationAvailable()) {\r\n\t\t\tconsole.log(\"Conditional UI is understood by your browser but not available\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t} else {\r\n\t\tif (!navigator.credentials.conditionalMediationSupported) {\r\n\t\t\tconsole.log(\"Your browser does not implement Conditional UI (are you running the right chrome/safari version with the right flags?)\");\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tconsole.log(\"This browser understand the old version of Conditional UI feature detection\");\r\n\t\t}\r\n\t}\r\n\r\n\tif(abortController != undefined){\r\n\t\tconsole.log('Cancelling previous request');\r\n\t\tabortController.abort('aborted');\r\n\t}\r\n\t\r\n\tabortController\t= new AbortController();\r\n\t\t\r\n\tabortController.onAbort\t= function(ev){\r\n\t\tconsole.log(ev);\r\n\t}\r\n\tabortController.signal.onAbort\t= function(ev){\r\n\t\tconsole.log(ev);\r\n\t}\r\n\r\n\tif(mediation != 'conditional'){\r\n\t\tsim.login.loadingScreen('Performing passkey login');\r\n\t}\r\n\r\n\ttry {\r\n\t\tlet formData\t\t\t= new FormData();\r\n\t\tformData.append('username', '');\r\n\r\n\t\tlet response\t\t\t= await FormSubmit.fetchRestApi('login/auth_start', formData);\r\n\t\tif(!response){\r\n\t\t\tthrow new Error('auth_start failed');\r\n\t\t}\r\n\r\n\t\tlet publicKey\t\t\t= preparePublicKeyOptions(response);\r\n\r\n\t\tlet credential = await navigator.credentials.get({\r\n\t\t\tsignal: abortController.signal,\r\n\t\t\tpublicKey: {\r\n\t\t\t\tchallenge: publicKey.challenge\r\n\t\t\t},\r\n\t\t\t//mediation: 'silent',\r\n\t\t\t//mediation: 'conditional',\r\n\t\t\t//mediation: 'required',\r\n\t\t\tmediation: mediation\r\n\t\t});\r\n\r\n\t\tif(mediation == 'conditional'){\t\r\n\t\t\tsim.login.loadingScreen('Performing passkey login');\r\n\t\t}\r\n\t\t\r\n\t\treturn await processCredential(credential);\r\n\t} catch (error) {\r\n\t\tif (error == \"aborted\") {\r\n\t\t\tconsole.log(\"request aborted\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif(error.message.includes('A request is already pending.')){\r\n\t\t\tstartConditionalRequest(mediation);\r\n\t\t}\r\n\r\n\t\t// only do when login modal is open\r\n\t\tif(sim.login != null){\r\n\t\t\tsim.login.resetForm();\r\n\r\n\t\t\tshowMessage('Passkey login failed, try using your username and password', 'error');\r\n\t\t}\r\n\r\n\t\tconsole.log(error);\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport async function checkWebauthnAvailable(){\r\n\tlet webauthnSupported\t= false;\r\n\t\r\n\tif (window.PublicKeyCredential) {\r\n\t\tlet available\t= await PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable();\r\n\t\tif (available) {\r\n\t\t\twebauthnSupported = true;\r\n\t\t} else {\r\n\t\t\tconsole.log(\"WebAuthn supported, Platform Authenticator not supported.\");\r\n\t\t}\r\n\t} else {\r\n\t\tconsole.log(\"Not supported.\");\r\n\t}\r\n\r\n\treturn webauthnSupported;\r\n}","import {\r\n\tcloseMobileMenu,\r\n\tshowMessage\r\n} from './partials/shared.js';\r\n\r\nimport {\r\n\tshowLoginQrCode,\r\n\thideQrCode\r\n} from './partials/qr_login.js';\r\n\r\nimport {\r\n\tstartConditionalRequest,\r\n\tcheckWebauthnAvailable,\r\n\twebAuthVerification\r\n} from './partials/webauth.js';\r\n\r\n//Add an event listener to the login or register button\r\nconsole.log(\"Login.js loaded\");\r\n\r\nconst login = class{\r\n\tconstructor() {\r\n\t\tthis.init();\r\n\r\n\t\tlet params = new Proxy(new URLSearchParams(window.location.search), {\r\n\t\t\tget: (searchParams, prop) => searchParams.get(prop),\r\n\t\t});\r\n\r\n\t\tif(params['showlogin'] != null){\r\n\t\t\tconsole.log('Trying silent login');\r\n\t\t\tstartConditionalRequest('silent');\r\n\t\t}\r\n\r\n\t\tif(this.checkIsIOS){\r\n\t\t\tthis.addMaximumScaleToMetaViewport();\r\n\t\t}\r\n\r\n\t\tthis.eventListeners();\r\n\t};\r\n\r\n\teventListeners(){\r\n\t\tdocument.addEventListener('keypress', (e) => {\r\n\t\t\tif (e.key === 'Enter' && this.creds != null){\r\n\t\t\t\tif(this.curScreen == this.creds && document.getElementById('check-cred').disabled == false){\r\n\t\t\t\t\tthis.verifyCreds();\r\n\t\t\t\t}else if(this.curScreen == this.email || this.curScreen == this.twofa){\r\n\t\t\t\t\tthis.requestLogin();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener(\"click\", async (event) => {\r\n\t\t\tlet target = event.target;\r\n\r\n\t\t\tif(target.matches('.login')){\r\n\t\t\t\tthis.openLoginModal();\r\n\r\n\t\t\t\tconsole.log('Trying silent login');\r\n\t\t\t}else if(target.id == 'check-cred'){\r\n\t\t\t\t// Check if a valid username and password is submitted\r\n\t\t\t\tthis.verifyCreds();\r\n\t\t\t}else if(target.id == \"login-button\"){\r\n\t\t\t\t// Submit the login form when averything is ok\r\n\t\t\t\tthis.requestLogin();\r\n\t\t\t}else if(target.closest('.toggle-pwd-view') != null){\r\n\t\t\t\ttogglePassworView(event);\r\n\t\t\t}else if(target.id == 'password-reset-form' || target.id == \"lost-pwd-link\"){\r\n\t\t\t\tthis.resetPassword(target);\r\n\t\t\t}else if(target.id == 'retry_webauthn'){\r\n\t\t\t\tthis.showMessage('');\r\n\t\t\t\tthis.verifyWebauthn([]);\r\n\t\t\t}else if(target.name == 'request_account'){\r\n\t\t\t\tthis.requestAccount(target);\r\n\t\t\t}else if(target.closest(`[name='fingerprintpicture']`) != null){\r\n\t\t\t\tstartConditionalRequest('silent');\r\n\t\t\t}else if(target.matches('.show-login-qr')){\r\n\t\t\t\tshowLoginQrCode();\r\n\t\t\t}else if(target.matches('.close-qr')){\r\n\t\t\t\thideQrCode();\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tcheckIsIOS(){\r\n\t\treturn /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\r\n\t};\r\n\r\n\tinit(){\r\n\t\tthis.form\t\t\t= document.getElementById('loginform');\r\n\t\tthis.msgScreen\t\t= document.getElementById('message-wrapper');\r\n\t\tthis.creds\t\t\t= document.getElementById('credentials-wrapper');\r\n\t\tthis.twofa\t\t\t= document.getElementById('authenticator-wrapper');\r\n\t\tthis.email\t\t\t= document.getElementById('email-wrapper');\r\n\t\tthis.login\t\t\t= document.getElementById('login-button-wrapper');\r\n\t\tthis.passwordReset \t= document.getElementById('password-reset-form');\r\n\r\n\t\tthis.curScreen\t\t= this.creds;\r\n\t}\r\n\r\n\t/**\r\n\t * Clear all inputs and shows the first screen\r\n\t */\r\n\tresetForm(){\r\n\t\tif(this.msgScreen.querySelector('.loader') == null){\r\n\t\t\tMain.showLoader(this.msgScreen.querySelector('.status-message'), false, 75);\r\n\t\t}\r\n\t\t\r\n\t\tthis.reset();\r\n\r\n\t\tthis.showScreen(this.creds);\r\n\t\t\r\n\t\tthis.curScreen\t\t= this.creds;\r\n\t}\r\n\r\n\t/**\r\n\t * Show the loading screen\r\n\t */\r\n\tloadingScreen(message){\r\n\t\tthis.msgScreen.querySelector('.status-message').textContent\t= message;\r\n\r\n\t\tthis.curScreen.classList.add('hidden');\r\n\t\tthis.login.classList.add('hidden');\r\n\t\tthis.passwordReset.classList.add('hidden');\r\n\r\n\t\tthis.msgScreen.classList.remove('hidden');\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the screen to the original login screen\r\n\t */\r\n\treset(){\r\n\t\tif(this.curScreen == undefined){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.curScreen.classList.remove('hidden');\r\n\t\tthis.msgScreen.classList.add('hidden');\r\n\r\n\t\tthis.passwordReset.classList.remove('hidden');\r\n\t}\r\n\r\n\t/**\r\n\t * Shows a particular screen\r\n\t */\r\n\tshowScreen(screen){\r\n\t\tif(this.curScreen != undefined){\r\n\t\t\tthis.curScreen.classList.add('hidden');\r\n\t\t\tthis.msgScreen.classList.add('hidden');\r\n\t\t}\r\n\r\n\t\tscreen.classList.remove('hidden');\r\n\r\n\t\tif(screen == this.twofa || screen == this.email){\r\n\t\t\tthis.login.classList.remove('hidden');\r\n\t\t}else{\r\n\t\t\tthis.login.classList.add('hidden');\r\n\t\t}\r\n\r\n\t\tscreen.querySelectorAll('input').forEach(el=>window.setTimeout(() => el.focus(), 0));\r\n\r\n\t\tthis.curScreen\t= screen;\r\n\t\t\r\n\t\t//hide messsages\r\n\t\tshowMessage('');\r\n\t}\r\n\t\r\n\t/**\r\n\t * Check if a valid username and password is submitted\r\n\t */\r\n\tasync verifyCreds(){\r\n\t\tthis.username\t= document.getElementById('username').value;\r\n\t\tlet password\t= document.getElementById('password').value;\r\n\r\n\t\t// Check if the fields are filled\r\n\t\tif(this.username != '' && password != ''){\r\n\t\t\tthis.passwordReset.classList.add('hidden');\r\n\r\n\t\t\tthis.loadingScreen( 'Verifying Credentials');\r\n\t\t}else{\r\n\t\t\tshowMessage('Please give an username and password!', 'warning');\r\n\t\t\treturn;\r\n\t\t}\t\r\n\r\n\t\t// Make sure we have a internet connection\r\n\t\tawait Main.waitForInternet();\r\n\r\n\t\tlet formData\t= new FormData(this.form);\r\n\r\n\t\tlet response\t= await FormSubmit.fetchRestApi('login/check-cred', formData);\r\n\r\n\t\tif(response){\r\n\t\t\tif(response != 'false' && response != false){\r\n\t\t\t\tresponse\t= this.addMethods(response);\r\n\t\t\t}else{\r\n\t\t\t\tresponse \t= false;\r\n\t\t\t}\r\n\r\n\t\t\tif(!response) {\r\n\t\t\t\tthis.reset();\r\n\r\n\t\t\t\tshowMessage('Invalid login, try again', 'error');\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.reset();\r\n\t\t}\r\n\t}\r\n\r\n\taddMethods(result){\t\t\t\r\n\t\tif(typeof(result) != 'object'){\r\n\t\t\t//something went wrong, reload the page\r\n\t\t\tlocation.reload();\r\n\t\t}\r\n\r\n\t\tif('redirect' in result){\r\n\t\t\t//redirect to the returned webpage\r\n\t\t\tlocation.href\t= result.redirect;\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tif(result instanceof Array){\r\n\r\n\t\t\tif(result.find(element => element == 'webauthn')){\r\n\t\t\t\tif(checkWebauthnAvailable()){\r\n\t\t\t\t\t//correct creds and webauthn enabled\r\n\t\t\t\t\tthis.verifyWebauthn(result);\r\n\t\t\t\t}else if(result.length == 1){\r\n\t\t\t\t\tshowMessage('You do not have a valid second login method for this device, please add one.', 'warning');\r\n\t\t\t\t\tthis.requestLogin();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.showTwoFaFields(result);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t//correct creds and 2fa enabled\r\n\t\t\t\tthis.showTwoFaFields(result);\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates and verifies a webauthentication login\r\n\t * @param {*} methods \r\n\t * @returns \r\n\t */\r\n\tasync verifyWebauthn(methods){\t\r\n\t\t//show webauthn messages\r\n\t\tthis.loadingScreen('Starting Webauthentication');\r\n\t\r\n\t\ttry{\r\n\t\t\tlet result\t= await webAuthVerification(this.username, this.msgScreen.querySelector('.status-message'));\r\n\t\r\n\t\t\tif(!result){\r\n\t\t\t\tthrow new Error( 'Webauthentication failed' );\r\n\t\t\t}\r\n\t\r\n\t\t\t//authentication success\r\n\t\t\tawait this.requestLogin();\r\n\t\t}catch (error){\t\r\n\t\t\tlet response\t= await FormSubmit.fetchRestApi('login/mark_bio_as_failed', '', false);\r\n\t\t\t\r\n\t\t\tconsole.log(response);\r\n\t\r\n\t\t\tif(methods.length == 1){\r\n\t\t\t\tshowMessage('Authentication failed, please setup an additional login factor.', 'error');\r\n\t\t\t\tthis.requestLogin();\r\n\t\t\t}else{\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t\tlet message;\r\n\t\t\t\tif(error['message'] == \"No authenticator available\"){\r\n\t\t\t\t\tmessage = \"No biometric login for this device found. <br>Give verification code.\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\tmessage = 'Web authentication failed, please give verification code.';\r\n\t\t\t\t}\r\n\t\t\t\tshowMessage(message, 'error');\r\n\t\r\n\t\t\t\t//Show other 2fa fields\r\n\t\t\t\tthis.showTwoFaFields(methods);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Performs the login action\r\n\t */\r\n\t//show loader\r\n\tasync requestLogin(){\r\n\t\tthis.loadingScreen('Logging in...');\r\n\r\n\t\tlet formData\t= new FormData(this.form);\r\n\t\tthis.form.querySelectorAll('.hidden [required]').forEach(el => {el.required = false});\r\n\t\tlet validity\t= this.form.reportValidity();\r\n\r\n\t\t//if not valid return\r\n\t\tif(!validity){\r\n\t\t\tthis.reset();\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tawait Main.waitForInternet();\r\n\r\n\t\tlet response\t= await FormSubmit.fetchRestApi('login/request_login', formData);\r\n\r\n\t\tif(!response){\r\n\t\t\tthis.reset();\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconsole.log(response);\r\n\t\t// We are logging in from an iframe\r\n\t\tif(window.self !== window.top){\r\n\r\n\t\t\t// change message\r\n\t\t\tconsole.log(window.parent.document.getElementById('iframe-loader'));\r\n\t\t\tconsole.log(window.parent.document);\r\n\t\t\tconsole.log(window.parent);\r\n\t\t\twindow.parent.document.getElementById('iframe-loader').textContent\t= 'Succesfully logged in, you may now close this popup';\r\n\r\n\t\t\t// Refresh the rest api nonce\r\n\t\t\twindow.parent.sim.restNonce\t= response.nonce;\r\n\r\n\t\t\t// Update user id\r\n\t\t\twindow.parent.sim.userId\t= response.id;\r\n\r\n\t\t\tconsole.log(window.parent.document.getElementById('iframe-loader'));\r\n\r\n\t\t\t// close all iframes\r\n\t\t\twindow.parent.document.querySelectorAll('iframe').forEach(el=>el.remove());\r\n\t\t}else{\r\n\t\t\tthis.loadingScreen('Succesfully logged in, redirecting...');\r\n\r\n\t\t\tif(response.redirect == ''){\r\n\t\t\t\t// refresh the page\r\n\t\t\t\tlocation.reload();\r\n\t\t\t}else{\r\n\t\t\t\t// go to the redirect page\r\n\t\t\t\tlocation.href = response.redirect;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Display the form for the 2fa email or authenticator code\r\n\t */\r\n\tshowTwoFaFields(methods){\r\n\t\tif(methods.includes('email')){\r\n\t\t\tthis.requestEmailCode();\r\n\t\t}\r\n\r\n\t\t//show 2fa fields\r\n\t\tfor(const method of methods){\r\n\t\t\t//do not show webauthn\r\n\t\t\tif(method == 'webauthn'){\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif(method == 'email'){\r\n\t\t\t\tthis.showScreen(this.email);\r\n\t\t\t}else{\r\n\t\t\t\tthis.showScreen(this.twofa);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Request email code for 2fa login\r\n\t */\r\n\tasync requestEmailCode(){\r\n\t\t// Show the email screen\r\n\t\tthis.showScreen(this.email);\r\n\r\n\t\tlet loader\t\t\t\t= Main.showLoader(null, false, 20, '', true);\r\n\t\tshowMessage(`Sending e-mail... ${loader}`);\r\n\r\n\t\tlet formData\t= new FormData();\r\n\t\tformData.append('username', this.username);\r\n\t\r\n\t\tlet response\t= await FormSubmit.fetchRestApi('login/request_email_code', formData, false);\r\n\t\t\r\n\t\tif(response){\r\n\t\t\tshowMessage(response);\r\n\t\t}else{\r\n\t\t\tshowMessage(`Sending e-mail failed`, 'error');\r\n\t\t}\r\n\t}\r\n\r\n\t//request password reset e-mail\r\n\tasync resetPassword(target){\t\t\r\n\t\tlet form \t\t\t= target.closest('form');\r\n\r\n\t\tlet button\t\t\t= form.querySelector('#lost-pwd-link');\r\n\r\n\t\tlet extraElements\t= form.querySelector('div.form-elements');\r\n\r\n\t\t// If the extra elements are not present, create them\r\n\t\tif(extraElements != null && extraElements.innerHTML != '' && extraElements.classList.contains('hidden')){\r\n\t\t\t// Hide the login form\r\n\t\t\tdocument.getElementById('loginform').classList.add('hidden');\r\n\r\n\t\t\tif(form.querySelector(`[name='username']`) == null){\r\n\t\t\t\textraElements.innerHTML\t= `<label class=\"form-label\">\r\n\t\t\t\t\tUsername<br>\r\n\t\t\t\t\t<input type=\"text\" name=\"username\" id=\"username\" class=\"form-control\" value=\"${this.username}\" required>\r\n\t\t\t\t</label><br>`+extraElements.innerHTML;\r\n\t\t\t}\r\n\r\n\t\t\t// Show the form\r\n\t\t\textraElements.classList.remove('hidden');\r\n\r\n\t\t\tbutton.dataset.orghtml\t= button.innerHTML;\r\n\t\t\tbutton.innerHTML\t= 'Request Password Reset';\r\n\r\n\t\t\tbutton.classList.add('button');\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(this.username == ''){\r\n\t\t\tMain.displayMessage('Specify your username first', 'error');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tbutton.classList.add('hidden');\r\n\t\tlet loader = Main.showLoader(button, false, 50, 'Requesting Password Reset...   ');\r\n\r\n\t\tlet formData\t= new FormData(form);\r\n\t\tformData.append('username', this.username);\r\n\t\t\r\n\t\tlet response\t= await FormSubmit.fetchRestApi('login/request_pwd_reset', formData);\r\n\r\n\t\tif (response) {\r\n\t\t\tMain.displayMessage(response, 'success');\r\n\t\t\t\r\n\t\t\t// Show the login form\r\n\t\t\tdocument.getElementById('loginform').classList.remove('hidden');\r\n\r\n\t\t\textraElements.classList.add('hidden');\r\n\r\n\t\t\tbutton.innerHTML\t= button.dataset.orghtml;\r\n\t\t\tbutton.classList.remove('button');\r\n\t\t}\r\n\r\n\t\tloader.remove();\r\n\t\tbutton.classList.remove('hidden');\r\n\r\n\t}\r\n\r\n\t// request a new user account\r\n\tasync requestAccount(target){\r\n\t\tlet form \t\t= target.closest('form');\r\n\r\n\t\t// Show loader\r\n\t\tform.querySelector('.loader-wrapper').classList.remove('hidden');\r\n\r\n\t\tlet formData\t= new FormData(form);\r\n\r\n\t\tlet response\t= await FormSubmit.fetchRestApi('login/request_user_account', formData);\r\n\t\t\r\n\t\tif(response){\r\n\t\t\tMain.displayMessage(response);\r\n\t\t}\r\n\r\n\t\t// reset form \r\n\t\tform.reset();\r\n\r\n\t\t// Hide loader\r\n\t\tform.querySelector('.loader-wrapper').classList.add('hidden');\r\n\t}\r\n\r\n\t// Show the modal with the login form\r\n\topenLoginModal(){\r\n\t\t// Make sure the menu is closed\r\n\t\tcloseMobileMenu();\r\n\r\n\t\t//prevent page scrolling\r\n\t\tdocument.querySelector('body').style.overflowY = 'hidden';\r\n\r\n\t\tthis.modal\t= document.getElementById('login-modal');\r\n\t\tthis.modal.style.display = 'block';\r\n\r\n\t\tthis.modal.classList.remove('hidden');\r\n\r\n\t\tthis.resetForm();\t\t\r\n\t}\r\n\t\r\n\t//prevent zoom in on login form on a iphone\r\n\taddMaximumScaleToMetaViewport(){\r\n\t\tlet el = document.querySelector('meta[name=viewport]');\r\n\t\r\n\t\tif (el !== null) {\r\n\t\t\tlet content\t= el.getAttribute('content');\r\n\t\t\tlet re \t\t= /maximum\\-scale=[0-9\\.]+/g;\r\n\t\t\r\n\t\t\tif (re.test(content)) {\r\n\t\t\t\tcontent = content.replace(re, 'maximum-scale=1.0');\r\n\t\t\t} else {\r\n\t\t\t\tcontent = [content, 'maximum-scale=1.0'].join(', ')\r\n\t\t\t}\r\n\t\t\r\n\t\t\tel.setAttribute('content', content);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function togglePassworView(ev){\r\n\tvar target\t= ev.target;\r\n\r\n\tif(ev.target.tagName == 'IMG'){\r\n\t\ttarget\t= ev.target.parentNode;\r\n\t}\r\n\r\n\tif(target.dataset.toggle == '0'){\r\n\t\ttarget.title\t\t\t\t\t\t\t\t= 'Hide password';\r\n\t\ttarget.dataset.toggle\t\t\t\t\t\t= '1';\r\n\t\ttarget.innerHTML\t\t\t\t\t\t\t= target.innerHTML.replace('invisible', 'visible');\r\n\t\ttarget.closest('.password').querySelector('input[type=\"password\"]').type\t= 'text';\r\n\t}else{\r\n\t\ttarget.title\t\t\t\t\t\t\t\t= 'Show password';\r\n\t\ttarget.dataset.toggle\t\t\t\t\t\t= '0';\r\n\t\ttarget.innerHTML\t\t\t\t\t\t\t= target.innerHTML.replace('visible', 'invisible');\r\n\t\ttarget.closest('.password').querySelector('input[type=\"text\"]').type\t= 'password';\r\n\t}\r\n}\r\n\r\n\r\n// SHow the login button\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\t//check if the current browser supports webauthn\r\n\tcheckWebauthnAvailable();\r\n\r\n\tdocument.querySelectorAll('.login.hidden').forEach(el=>{\r\n\t\tel.classList.remove('hidden');\r\n\t});\t\r\n\r\n\tsim.login = new login();\r\n});","import { togglePassworView } from './login.js';\r\n\r\nconsole.log('Password strength.js loaded');\r\n\r\nfunction checkPassStrength() {\r\n\tvar pass1 \t\t= document.querySelector('[name=\"pass1\"]');\r\n\tvar pass2 \t\t= document.querySelector('[name=\"pass2\"]');\r\n\tvar indicator1\t= document.querySelector('#pass-strength-result1');\r\n\tvar indicator2\t= document.querySelector('#pass-strength-result2');\r\n\r\n\tvar pwsL10n = {\r\n\t\tempty: \"Strength indicator\",\r\n\t\tshort: \"Improve this password, maybe add special characters\",\r\n\t\tbad: \"Keep going!\",\r\n\t\tgood: \"Allmost there, make it a little bit stronger\",\r\n\t\tstrong: \"Well done!\",\r\n\t\tmismatch: \"Mismatch\"\r\n\t};\r\n\r\n\tif (pass1.value == '') {\r\n\t\tindicator1.textContent = pwsL10n.empty;\r\n\t\tindicator1.classList.add('hidden');\r\n\t}else{\r\n\t\tupdateIndicator(indicator1);\r\n\t}\r\n\t\r\n\tif (pass2.value == '') {\r\n\t\tindicator2.textContent = pwsL10n.empty;\r\n\t\tindicator2.classList.add('hidden');\r\n\t}else{\r\n\t\tupdateIndicator(indicator2);\r\n\t\t\r\n\t\t//hide password strength indicator1\r\n\t\tif (pass1.value != '') {\r\n\t\t\tindicator1.classList.add('hidden');\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction updateIndicator(indicator){\r\n\tindicator.classList.remove('short', 'bad', 'good', 'strong');\r\n\r\n\tvar pass1 \t\t= document.querySelector('[name=\"pass1\"]');\r\n\tvar pass2 \t\t= document.querySelector('[name=\"pass2\"]');\r\n\r\n\tif(pass1.value != pass2.value){\r\n\t\tindicator.classList.add('bad');\r\n\t\tindicator.textContent = pwsL10n.mismatch;\r\n\t}else{\r\n\t\tvar strength\t= wp.passwordStrength.meter(pass1.value, wp.passwordStrength.userInputDisallowedList(), pass2.value);\r\n\r\n\t\tswitch (strength) {\r\n\t\t\tcase 2:\r\n\t\t\t\tindicator.classList.add('bad');\r\n\t\t\t\tindicator.textContent = pwsL10n.bad;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tindicator.classList.add('good');\r\n\t\t\t\tindicator.textContent = pwsL10n.good;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tindicator.classList.add('strong');\r\n\t\t\t\tindicator.textContent = pwsL10n.strong;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\tindicator.classList.add('short');\r\n\t\t\t\tindicator.textContent = pwsL10n.mismatch;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tindicator.classList.add('short');\r\n\t\t\t\tindicator.textContent = pwsL10n['short'];\r\n\t\t}\r\n\t}\r\n\t\r\n\tindicator.classList.remove('hidden');\r\n}\r\n\r\nasync function submitPasswordChange(event){\r\n\tvar form\t= event.target.closest('form');\r\n\r\n\t// show loader\r\n\tform.querySelector('.submit-wrapper .loader-wrapper').classList.remove('hidden');\r\n\r\n\tvar formData\t= new FormData(form);\r\n\r\n\tvar response\t= await FormSubmit.fetchRestApi('login/update_password', formData);\r\n\r\n\tif(response){\r\n\t\tMain.displayMessage(response.message);\r\n\r\n\t\t// redirect to login again if resetting own password\r\n\t\tif(!location.href.includes('?user-id=')){\r\n\t\t\tlocation.href\t= response.redirect;\r\n\t\t}\r\n\t}\r\n\r\n\t// hide loader\r\n\tform.querySelector('.submit-wrapper .loader-wrapper').classList.add('hidden');\r\n}\r\n\t\t\t\t\t\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n\t\r\n\tdocument.querySelectorAll('.changepass').forEach(el=>el.addEventListener(\"keyup\", checkPassStrength));\r\n\r\n\tdocument.querySelectorAll('[name=\"update-password\"]').forEach(el=>el.addEventListener(\"click\", submitPasswordChange));\r\n\r\n\tdocument.querySelectorAll('.toggle-pwd-view').forEach(el=>el.addEventListener(\"click\", togglePassworView));\r\n});"],"names":["base64UrlDecode","input","pad","replace","length","Error","Array","join","window","atob","arrayToBase64String","a","btoa","String","fromCharCode","preparePublicKeyOptions","publicKey","challenge","Uint8Array","from","c","charCodeAt","undefined","user","id","excludeCredentials","map","data","allowCredentials","preparePublicKeyCredentials","publicKeyCredential","type","rawId","response","clientDataJSON","attestationObject","authenticatorData","signature","userHandle","showMessage","message","el","document","querySelector","innerHTML","DOMPurify","sanitize","classList","remove","add","intervalId","checkCount","async","refreshQrCode","formData","FormData","wrapper","getElementById","qrCodeImage","console","log","append","dataset","token","key","FormSubmit","fetchRestApi","wrapperinnerHTML","oldtoken","clearInterval","Main","showLoader","startsWith","location","href","reload","login","abortController","credParsing","PublicKeyCredential","isUserVerifyingPlatformAuthenticatorAvailable","then","result","startConditionalRequest","mediation","isConditionalMediationAvailable","navigator","credentials","conditionalMediationSupported","abort","AbortController","onAbort","ev","signal","sim","loadingScreen","credential","get","JSON","stringify","requestLogin","reset","resetForm","processCredential","error","includes","checkWebauthnAvailable","webauthnSupported","constructor","this","init","Proxy","URLSearchParams","search","searchParams","prop","checkIsIOS","addMaximumScaleToMetaViewport","eventListeners","addEventListener","e","creds","curScreen","disabled","verifyCreds","email","twofa","event","target","matches","openLoginModal","closest","togglePassworView","resetPassword","verifyWebauthn","name","requestAccount","firstChild","setInterval","test","userAgent","MSStream","form","msgScreen","passwordReset","showScreen","textContent","screen","querySelectorAll","forEach","setTimeout","focus","username","value","password","waitForInternet","addMethods","redirect","find","element","showTwoFaFields","methods","messageEl","displayMessage","webAuthVerification","required","reportValidity","self","top","parent","restNonce","nonce","userId","requestEmailCode","method","button","extraElements","contains","orghtml","loader","ariaExpanded","style","overflowY","modal","display","content","getAttribute","re","setAttribute","tagName","parentNode","toggle","title","checkPassStrength","pass1","pass2","indicator1","indicator2","pwsL10n","updateIndicator","indicator","mismatch","wp","passwordStrength","meter","userInputDisallowedList","bad","good","strong","submitPasswordChange"],"sourceRoot":""}